import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.JComponent;

/*******************************************************************
 * @Titre_Classe: FEN�TRE FORMES
 * 
 * @R�sumer: 
 * Cette fen�tre g�re l'affichage des forme � l'�cran.
 * La fen�tre poss�de une dimension fixe de 500 x 500 et 
 * supporte un maximum de 10 formes.
 * 
 * @Auteur: Alexandre Laroche
 * @Date: 26 mai 2017 
 * 
 *******************************************************************/ 
public class FenetreFormes extends JComponent{

	/***************************
	 * Classes instanci�es
	 ***************************/

	private final Dimension dimension;
	private ListeChaine<FormesAbstraites> listeAbstraites;
	
	
	/********************
	 * Constantes
	 ********************/
	
	private static final long serialVersionUID = -2262235643903749505L;
	
	//On donne les dimensions de la fen�tre et la quantit� maximale de formes 
	private static final int 
	WIDTH = 500,
	HEIGHT = 500,
	MAX_FORMES = 10;
	
	/********************
	 * Variable
	 ********************/
	
	//Utilis� pour compter le nombre de formes � l'affiche
	private int nombreFormes = 0;
	
	
	/********************
	 * Constructeur
	 ********************/
	public FenetreFormes(){
		
		//On donnes les dimensions de la fen�tre
		dimension = new Dimension(WIDTH, HEIGHT);

		//On cr�� une liste qui peut garder en m�moire des formes abstraites
		listeAbstraites = new ListeChaine<FormesAbstraites>();
	}

	/*******************************************************************
	 * @Titre: AJOUTER FORME
	 * 
	 * @R�sumer:
	 * G�re la capacit� maximale de formes � afficher � l'�cran avec une 
	 * limite de 10. Permet aussi d'afficher continuellement 10 formes
	 * avec un changement dynamique.
	 * 
	 *******************************************************************/
	public void ajoutforme(FormesAbstraites formesAbstraites){
		listeAbstraites.ajouterFin(formesAbstraites);
	}

	
	public void viderListeChaine() {
		
		listeAbstraites.flush();
		
		System.out.println("\nLISTE CHA�N�E VIDE ET PR�TE\n*****************************");
	}	
	
	
	/*******************************************************************
	 * @Titre: AFFICHE FORMES
	 * 
	 * @R�sumer:
	 * Affiche � l'�cran les formes gard�es en m�moire de la liste.
	 * 
	 *******************************************************************/
	@Override 
	public void paintComponent(Graphics g){
	
		if(nombreFormes != 0) {
		
			for (int i = 0; i < listeAbstraites.getSize(); i++){
				
				//Affiche � l'�cran les formes de la liste
				listeAbstraites.getElement(i).graphiqueForme(g);
			}
		}
	}
	
	
	
	
	public void toBePaint(ListeChaine<FormesAbstraites> listeAbstraites){
		
		this.listeAbstraites = listeAbstraites;
		
		nombreFormes = listeAbstraites.getSize();
	}
	
	
	

	/*******************************************************************
	 * @Titre: DIMENSION
	 * 
	 * @R�sumer:
	 * Le Layout qui utilise (contient) FenetreFormes doit reserver 
	 * l'espace n�cessaire a son affichage.
	 * 
	 *******************************************************************/
	@Override 
	public Dimension getPreferredSize(){

		return dimension;
	}
}