
public class AlgorithmeTriForme extends AbstraitMecanismesTri{

	private Noeud suivant, echange;

	private FormesAbstraites formesAbstraites;
	private FormesAbstraites formesSuivantes;

	private static final String
	FORME_CARRE = "CARRE",
	FORME_RECTANGLE = "RECTANGLE",
	FORME_CERCLE = "CERCLE",
	FORME_OVALE = "OVALE",
	FORME_LIGNE = "LIGNE";

	public AlgorithmeTriForme(){

		suivant = echange = null;
	}

	public AlgorithmeTriForme(Noeud noeud, String ordreTri, Noeud suivantForme, Noeud echangeForme){

		super(noeud, ordreTri);

	}
}




//echange = getChaine(formesSuivantes,suivant);
//suivant = getChaine(formesAbstraites,getNoeud());   
//setNoeud(echange); 




//		this.suivant = suivantForme;
//		this.echange = echangeForme;
//		
//		while(getNoeud().getProchain() != null){
//
//			formesAbstraites = (FormesAbstraites) getNoeud().getContenu(); 
//			formesSuivantes = (FormesAbstraites) getNoeud().getProchain().getContenu();
//			suivant = getNoeud().getProchain();
//
//			if(ordreTri.equals(getCroissant())){
//
//				// chercher la place du noeud dans la liste 	
//				for(formesAbstraites = (FormesAbstraites) getNoeud().getContenu();
//						formesSuivantes == null;
//							formesAbstraites = (FormesAbstraites) getNoeud().getProchain().getContenu());       			
//
//				if (formesSuivantes.getNomForme() == FORME_CARRE){            			           			
//
//					repitionTri(); 
//
//					if(formesSuivantes.getNomForme() == FORME_RECTANGLE && formesAbstraites.getNomForme() != FORME_CARRE){
//
//						repitionTri();
//
//						if(formesSuivantes.getNomForme() == FORME_CERCLE && 
//								(formesAbstraites.getNomForme() != FORME_CARRE || formesAbstraites.getNomForme() != FORME_RECTANGLE)){
//
//							repitionTri();
//
//							if(formesSuivantes.getNomForme() == FORME_OVALE && (formesAbstraites.getNomForme() != FORME_CARRE || 
//									formesAbstraites.getNomForme() != FORME_RECTANGLE || formesAbstraites.getNomForme() != FORME_CERCLE)){
//
//								repitionTri();                     	        
//							}
//						}
//					}
//				}                		
//
//			} else {
//
//				if (formesSuivantes.getNomForme() == FORME_LIGNE){            			           			
//
//					repitionTri();
//
//					if(formesSuivantes.getNomForme() == FORME_OVALE && formesAbstraites.getNomForme() != FORME_LIGNE){
//
//						repitionTri();
//
//						if(formesSuivantes.getNomForme() == FORME_CERCLE && 
//								(formesAbstraites.getNomForme() != FORME_LIGNE || formesAbstraites.getNomForme() != FORME_OVALE)){
//
//							repitionTri();
//
//							if(formesSuivantes.getNomForme() == FORME_RECTANGLE && (formesAbstraites.getNomForme() != FORME_LIGNE || 
//									formesAbstraites.getNomForme() != FORME_OVALE || formesAbstraites.getNomForme() != FORME_CERCLE)){
//
//								repitionTri(); 
//							}
//						}
//					}
//				}
//			}
//		}
//	}
//




//while(noeud.getProchain() != null){
//
//	formesAbstraites = (FormesAbstraites) noeud.getContenu(); 
//	formesSuivantes = (FormesAbstraites) noeud.getProchain().getContenu();
//	suivant = noeud.getProchain();
//
//	//Ordre a suivre: Carre, rectangle, cercle, ovale, ligne.
//	if(ordreTri.equals(getCroissant())){
//
//		for(formesAbstraites = (FormesAbstraites) noeud.getContenu(); formesSuivantes == null;
//				formesSuivantes = (FormesAbstraites) noeud.getProchain().getContenu())  
//
//			if (formesSuivantes.getNomForme() == FORME_CARRE){
//
//				System.out.println("CARRE !!!");
//				
//				ajouter(formesAbstraites, 0);
//
//				if(formesSuivantes.getNomForme() == FORME_RECTANGLE && 
//						formesAbstraites.getNomForme() != FORME_CARRE){
//
//					System.out.println("RECTANGLE !!!");
//					
//					ajouter(formesAbstraites, 1);
//					
//					if(formesSuivantes.getNomForme() == FORME_CERCLE && 
//							formesAbstraites.getNomForme() != FORME_CARRE || 
//								formesAbstraites.getNomForme() != FORME_RECTANGLE){
//						
//						ajouter(formesAbstraites, 2);
//						
//						if(formesSuivantes.getNomForme() == FORME_OVALE && 
//								formesAbstraites.getNomForme() != FORME_CARRE || 
//									formesAbstraites.getNomForme() != FORME_RECTANGLE || 
//										formesAbstraites.getNomForme() != FORME_CERCLE){
//						
//							ajouter(formesAbstraites, 3);
//							
//							if(formesSuivantes.getNomForme() == FORME_LIGNE &&
//									formesAbstraites.getNomForme() != FORME_OVALE || 
//										formesAbstraites.getNomForme() != FORME_CARRE || 
//											formesAbstraites.getNomForme() != FORME_RECTANGLE || 
//												formesAbstraites.getNomForme() != FORME_CERCLE){
//								
//								ajouter(formesAbstraites, 4);
//								
//							}
//						}
//					}
//				}
//			}
//			else{
//
//
//				System.out.println("Tri Decroissant Type Forme Non Pret");
//
//			}
//	}
//	//}
//
//	//	private void repitionTri(){
//	//
//	//		echange = setNoeud(formesSuivantes,suivant);
//	//		suivant = getChaine(formesAbstraites,getNoeud(0));   
//	//		//setNoeud(echange); 
//}
//}

